# automatically generated from XOTclIDE
# script require component {IDECore IDEBaseGUI}
@ Component EspTeknikajIloj {
description {Teknikaj iloj ne kunligita kun lingvo aux esperanta lingvo:
   * GUI aldonoj
   * ZIP subteno
   * unopaj funkcioj
Tiu modulo depandas je Tk (GUI)}
}
package provide EspTeknikajIloj 0.993
package require IDEBaseGUI
package require IDECore
Class IDE::LastVisitedMenuStruct -superclass ::IDE::MenuStruct -parameter command
@ ::IDE::LastVisitedMenuStruct idemeta component EspTeknikajIloj
IDE::LastVisitedMenuStruct instproc init {tname uline} {
    next
    my set menuItems {}
    my set aktList {}
}
IDE::LastVisitedMenuStruct instproc menuIsMapped win {
    my instvar aktList command
    set n [EsperantoConf prenuVizitajnDosierojn]
    if {$n ne $aktList} {
         $win delete 0 end
         foreach f $n {
             $win add command -label $f -command "$command [list $f]"
         }
         set aktList $n
    }
}
@ Class IDE::Toolbar {
description {GUI-Elemento uzato por ''Toolbar''}
}
Class IDE::Toolbar
@ ::IDE::Toolbar idemeta component EspTeknikajIloj
IDE::Toolbar instproc addCommand {name command image {pos 1.0}} {
    my instvar win count winArr tooltips
    ::IDE::Toolbar createImage $image
    set btnwin $win.btn$count
    button $btnwin -image $image  -relief flat -overrelief raised -takefocus 0 -command $command
    my addWin $btnwin $pos
    set tooltips($btnwin) $name
    bind $btnwin <Any-Enter> "after 1000 [list ::IDE::Toolbar showTooltip [self] %W]"
    bind $btnwin <Any-Leave> "after 1000 [list destroy %W.balloon]"
    incr count
    return $btnwin
}
IDE::Toolbar instproc addMenu {menu image {pos 1.0}} {
   my addCommand [$menu name] [$menu command] $image $pos
}
IDE::Toolbar instproc addSeparator {{pos 1.0}} {
    my instvar win count
    frame $win.sep$count -relief sunken -borderwidth 1 -width 2
    my addWin $win.sep$count $pos
    incr count
}
IDE::Toolbar instproc addWin {btnwin pos} {
    my instvar winArr win
    if {![info exists winArr]} {
        pack $btnwin -side left -fill y
        set winArr($pos) $btnwin
    } else {
        set winArr($pos) $btnwin
        set sorted [lsort -real [array names winArr]]
        set id [lsearch -real -sorted $sorted $pos]
        if {$id==0} {
            pack $btnwin -side left -before $winArr([lindex $sorted 1]) -fill y
        } else {
            pack $btnwin -side left -after $winArr([lindex $sorted [expr {$id-1}]]) -fill y
        }
    }
}
IDE::Toolbar instproc init win {
    my set win $win
    frame $win
    my set count 0
    next
}
IDE::Toolbar instproc showTooltip win {
    my instvar tooltips
    if {![winfo exists $win] || ![winfo viewable $win]} {return}
    set text $tooltips($win)
    
    if {[eval winfo containing [winfo pointerxy .]]!=$win} {return}
    set top $win.balloon
    catch {destroy $top}
    toplevel $top -bd 1 -bg black
    wm overrideredirect $top 1
    if {$::tcl_platform(platform) eq "macintosh"} {
        unsupported1 style $top floating sideTitlebar
    }
    pack [message $top.txt -aspect 10000 -bg lightyellow -font fixed -text $text]
    set wmx [winfo rootx $win]
    set wmy [expr [winfo rooty $win]+[winfo height $win]]
    wm geometry $top [winfo reqwidth $top.txt]x[winfo reqheight $top.txt]+$wmx+$wmy
    raise $top
}
IDE::Toolbar proc convert {} {
    cd ~/icons-esperantilo
    set ret ""
    foreach f [glob *.png] {
        set rn [file rootname $f]
        exec convert -channel Opacity -threshold 40000 $f $rn.gif
        set b [exec base64 $rn.gif]
        set name $rn
        set Name [esp::grandskribi $name]
        append ret "IDE::Toolbar proc create$Name {} {
    image create photo $name -data {
        $b
    }
}
"
    }
    IDE::ResultBrowser newBrowser $ret
}
IDE::Toolbar proc createAutospellcheck {} {
    image create photo autospellcheck -data {
        R0lGODlhFgAWAPIAAAAAAAQCBAwKDBQWFFxaXMAAAP8AAKusrSH5BAEAAAcALAAAAAAWABYAAANX
eLrc/jCeQBW96wYWyCHbpBDD5H2haClCpq6wGoJvo4VabLtHi9YcXmqTeg1htM7ouLplMJJow0Bd
UKuK67TApXK/hm+3sOAexAbFt2yWut/wuHxOr0cTADs=
    }
}
IDE::Toolbar proc createBack {} {
    image create photo back -data {
        R0lGODlhFAAUAPYAAAAAAA0NDw0OEB0hKyElLiImMCUqMycqMiwwN0RJVEZLVUVUcktad05ceFBZ
alVcalthb1FgfFdlgV1rh2NxjGNxjWRyjGhziGF1m2N3nml2kmt4kW98l3R8jWZ6oGl9pGp+pGt/
pWx/pnSCnHWCnHGDqXCDqnGEq3KFq3KGq3OGrHaJr3iHoXiKrnmLrneKsHiLsXmMsnqNsXqNs3uO
tH6Rtn6Rt3+St4GMoYCStYCTuIGUuYKVuoOWu4aYu4eYu4aZvYeav4iavYibv5Wjv5aivImcwIqc
wYudwo6gxJGjyJKkyJOlyZaozJuqypqsz56tzZqt0KCrxKCsw6OuxqCuzaKwz6Kx0KGz1qe21K27
2LXC3rXD3rjF4KusrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAF4ALAAAAAAUABQAAAebgF6Cg4SFhoeIiYqLiQCMhQEPF46PAhBELg2UigAJRU4tGAubhwAK
UlY5JR4ZDKSEplNaUDkiHyAhEa9eplRcVz8yKSYnKCoSrwAdXVtZQjArLzAxMzQTuwAIOFVCNjU3
Ojs8PRW7ggAHGz5AQUNGR0ga5oMABBZGSUpLTBzzsAMUmjyJMsJfIQAFSGBhYdAQAAMOGpZ6RLGi
oEAAOw==
    }
}
IDE::Toolbar proc createBug {} {
    image create photo bug -data {
R0lGODlhMAAwAPcAAAAAAAABAwECBgECBwIDCgIDCwMEDgMEDwQFDwQFEAQGEgUGFAUGFQUHFgYH
FwYIGAYIGQYIGgYIGwcJHAcJHgoLEw0NEA8QFhMUHxUVGhYXGhkZHAgKIAgKIQgLIwoMJwoNKQsO
KwsOLAsOLQwPKwwPMAwQMQwQMg0QMg0RNA0RNQ4RNg4SOQ4TOg8TOhcYIRAUNRAUPhAUPycpPTIz
ORAVQRAVQhEVQhEVQxEWQxEWRBEWRRIXRhIXRxIXSBMXSRMYShQZTxccSxQaUBQaURUaUhUaUxUb
UxYbVRYcVhYcVxYcWBcdWhcdWxcdXBceXBgeXRgeXhgeXxgfXxgfYBgfYRkfYhkgYhkgYxkgZBkg
ZRohZRohZhohZxohaBoiaBsiaRsiaxsjaxsjbRwjbRwjbhwkbhwkbxwkcB0lcB0lcR4mch8mcx8n
cyQrbCAndCAodCcveigweiszfSwzfS00eCw0fS41fi42fzU6ZT5AR0tNVU1QY09SZFhbal5hbmBi
b2FkcGRmcWRncjM6gjY+hDpChzxEiD9GikNKh0NLjUhPkElQkVleg1BWlVJZl1NZl1Nal1deml5k
nmltgWlth2Bmn3BzgHx/jWFooWVro2dupGpxpmtyp3R6p3V7rXd+r32Ajn2Es4GHqYGItYKItomP
uo2QpJGWv5KYwJiexJ6kyJ+lyaGnyqOpy6OpzKmuz66yxqqw0LS61rW61re82Lm907m+2rq/2r7D
3MDF3qusrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAALsALAAAAAAwADAA
AAj+AHcJHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHOkQgMmTCU12NElj0CBB
ezaoNDhTIwA9sXTRkvXKFSxKGQDQFGoTEy5WpDZFYrTokSZPL4gOrHkRACBYohzdeYPGTBk0begk
qlCQqkUNrTgRUiOGC5YqVK5wCZNGiNRdZikC4NPJjpkuUpYcGTLkyJIoXMrczTsRQKNCZ7g0KfLj
howYNnwQYZIlglTGKRECyMPmCxQiO1qYECGiBAsdQ5wo+HyXIWMAMMxgSeLDhQgODxhA6BACR5CT
KCPmBTBgCxUiN1BwKGBBTyA/fF4QQF67pFmTH6TsDKkxQsAgW7NUgZJ0yM0E0MlT1j7pwUgOBpdy
rfq0SI6aMWBw8QBt3DWUHHcInJAALqlYgocaYWwxBRNJsMBdfN5diNwok8RxRhdULHEDCypQgGFG
3GFQxxleRDHEAnv80ccF3dmEnAE4IKHEAaHcgkomhpBwIUYaIrdHLaUoAgcZVghAm0RFToXcKaYg
ooYXVDAhwZMZIncQd5VAskYXTxQBRAOL1TiUmgJ5idcMc4QRBRE6rBBAmjYSZBIPWiTRQwoGpMkm
lGk6AMIETpY1aGPznQgSaCRJ6WakkjpK6aWYZqrpppx26ilFAQEAOw==}
}
IDE::Toolbar proc createButton_cancel {} {
    image create photo button_cancel -data {
        R0lGODlhFAAUAPYAAAAAAAwBAQwCAQwCAg4EAw8KChAEBBYCAiIFBCQGBSsFBCwLCisZGSweHjUG
BUIIB0cLCkQPDkQbGlYKCFQTEkgpKFMjIVYvLmAQD3gUEnoVFG8pJ2QwL4MbGYUcG5cXFJ4bGZIr
KKkXFK8VErEXE7QZFbcaF7EcGbocGb0eG6M7OIFHRZRiYKJVU6xiYLF0c7J5eMAgHcIiH8MiH8Am
I8UkIcYkIckmI8omI8woJc0oJc4vLMExMMQ5ONAqKNQsKtcuLNcvLNgvLdEyL9sxL9Q1Mtc0M9s0
Mt4zMd8zMt8+POI1NOM2NOY4NuI6Oek6Oe08O/E+PfI/PuJBP/NAP9tUT9xaVuZFQ/BcW+NzcOV5
d6usrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAFsALAAAAAAUABQAAAeUgFuCg4SFhoeIiYqLjIgAAIWPig0wLAWCABUuK5CHAC9YVD0GABda
V0wUji1UUlE8HFlTSUQRiQxOUE9NU0pEQh6diAtGS0hEQT8dwo4bR0A/PjQDiwAWVkU+Ojg2IAKK
ElVDOTc2MzEpHwGOKjvlGgknKCYlD44hNTIZjwgiJCMKEhHAAEHYgQkOmDVayLChw0KBAAA7
    }
}
IDE::Toolbar proc createButton_ok {} {
    image create photo button_ok -data {
        R0lGODlhFAAUAPYAAAAAAAANAAwQDA0RDRkfGQQgAwgoCBoiGhQ4FC0+LTI/MgtLCQpyCShKKCtX
K0lfSUx5TGR/ZAaEBRCRDgKkAQq/CQ27DA66DRSlEhK2ECm+KAfDBgbFBQPJAgfOBxjGGBXSFSnX
KTnOOTXZNUOEQ3Occ3edd3qeen2ffUDdQEzfTGreaXjEeGDkYG/ob3nreYqviorJiovWi5jMmIPt
g4buhofuh4rviozwjJHmkJHxkZvzm530na/fr6D1oKX2par3qq/4r7zvvLD4sLT5tLT6tL36vaus
rQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAEcALAAAAAAUABQAAAd+gEeCg4SFhoeIiYgAiogHKIyNhAAwOQuRkkcKRhoYBZlHAD0rFxkT
mIkAEUMbFRYMqJODBEIjHRwSsYMDMIyUNyAeFAGJD0QkAAlEKSEfxIsxPDYNMi8qIgaKACxAOzg1
Li0IkgIzQT46NA66hwAmRT8Q7IsnJfOp96D6+/yBADs=
    }
}
IDE::Toolbar proc createConfigure {} {
    image create photo configure -data {
        R0lGODlhFgAWAIQAAPwCBAQCBISChFxaXNze3NTS1Ly6vKSipNTO1Ly2vNza3Pz+/MzOzOTe5DQyNOzu7MTCxGRmZMTGxPTy9Ozm7Hx6fPTu9MzGzGxmbAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAW1ICCOZGmeaEoGbBsI6joMRGEcbQwESDIrtVtAF1gwDLNaAmfKiVgLBJKgwB1KxQZrBHU0FAXmavFoQLYiB6TxFXMj5AZBwnJI2I3wcNWALyYEcgoKXxRhOHs7XxEVCwsWFgoUDRYUFwwQB25ZCxiNjo6GkwUXN2NsCxEYqhUHoQ0MEglYRQQXErcHrI55FycuB2YSmoyOBTEtB2sXuhU6XAENC2a6z9AKCwq+1tAN3E2J3ySkIQAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createContents {} {
    image create photo contents -data {
        R0lGODlhFgAWAIYAAAQCBAQ2NPwCBHSurIS2tBx2dBweHPz+/Ozm1GxiTGyqpPz6/Pz69GSqpOzaxPzy5HxuVLSmlOTazPz27PT29NzClPTexHxuXLSmjAxqbFSinPTy9KyehNy+lPTy5Pz29HxyXNzWxKSahOzexPzy7IR2ZOTWtESenPTy7KSWfIyCbKyijAQGBDyalPTu3KSSdDSOjJyOdCSGhPzu3OzizJSGdPTq1PTq3JySdMy6lAyKhOzWtOzi1OTOrJyKbMS2nJySfMS+rAwCBNzOrNTCpNzKpJSGZKyafLSifLyylIx+ZHx6ZDSChAQuLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAIALAAAAAAWABYAAAf/gAABAoSFhoeHAAMAiI2IAAQFjI6EAAaJkQeTjwAICYkKBQcLm5WdBwyfhgChB66bp64HCQC1lQ2irqQCAA4PowsLEBESE4wAuLIHFAAVFr+uDBcYxRm1GrmuGxwdFh4Mrh8gGCET1gDYyhsiFSMkDAsMDCUYJhvnJ9kHKCnODwwfPlBQsULCPRYAWogK9sHFiwoOPEyQh0JFPXO1YBSYwBEFghjdHkwQOYGgwQwIZRR44GHGDBogabhAsYEEihrUMAIoUMCEDRs3HODIYQHFA6MPcJA7KICFjgw7eIzo4cOfiwc/gKwIUm2SkKdDdlDt4AABDaU/iIRwwbTSUyJFOow4S3Hkx9oNDDZgXPU0h1wcSIgEGUw4ibVET5WoWMKksePHpdxmyKADAEIWly9HJtQkQJMmlAgZCAQAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createEdit {} {
    image create photo edit -data {
        R0lGODlhFAAUAPZnAAAAABUVFRYWFhsbGx4eHh8fHyEhISYmJisrKy0tLTExMTMzMzc3Nzo6OkZG
RkxMTE1NTU5OTk9PT1FRUVdXV2FhYWNjY2RkZGlpaWxsbG9vb3FxcXJycnd3d3l5eX9/f4GBgYWF
hY+Pj5KSkpSUlJWVlZ6enp+fn6urq62tra6urq+vr7CwsLGxsbKysrOzs7m5ubq6usHBwcPDw8TE
xMXFxcbGxsfHx8jIyMnJycrKyszMzM/Pz9LS0tPT09TU1NfX19jY2NnZ2dvb29zc3N3d3d7e3t/f
3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy
8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///6usrQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAGgALAAAAAAUABQAAAf+gGiCg4SFhmgAiYqLjIUATk9QUVJTVFVWV1hYWR6JgwCSlJaYm1la
NQQKFgCCAFJOQEFBQkdZVERERQkvIA6siFRFMzQ0NTVaRDY3ER1SLgWfpKZaW1xdXTgJU0ohv4hY
QyviSzcs5hsMLikChABa1NZeXl9gUQEYGQveiFtWRkZTpiBJUiUCCB8UPH3qwgQHjh9JcugwwaAK
CgMS9gGYByaMGDFjyBSAUQPChw8awSRpwbJFEQ4Pimg40ARlO5Ahy5gxg6BHiQFXznRqN8YLEyZN
moyoEOMAjy9BJmgs02SH1R0LSBg4wUQGigaOzJwZO1YDgBNnZqi4sA8R2bcPY2uIiNAWEaO7dQ/p
JRQIADs=
    }
}
IDE::Toolbar proc createEdit2 {} {
    image create photo edit2 -data {
        R0lGODlhFgAWAIYAAPwCBISGhISChHx+fHx6fHR2dGxqbGxubGRmZGRiZFxeXFxaXFRSVIxSLPyuXMzKzMzKxMTCtExOTPzqrPz+/NTS1MS+tOSaVPyWNPz6/IxeNPzavPyKBNTW1PyCBPyGBJxmNPzOpLx6PNRqBMSCRNySTPyCDPSGBMxiBKROBHRydPSylOyydMxmBJxKBAwODPS2lPTq3OyabJxGBPTy5PTGrOyOXPR+DPz69PzmzPzevNxuPORqLMReFPzy7MyCXKxiNIRKHBQWFNTOxPzixJRaPFxONHRqVPz27PTy7PzStCwqJDQyLJSGdIx6ZPz29PTu5HRmTLSKbMSGZHROPFxKPJSKfJyShKyehMyuhDQmHEQuJJyOfLSijMSynMS6pLSefDQyNHx2bKSahLyqhLymhOzi1FRGNIR+bNzKtOTOtOTKrOTKpLyedAQCBFRWVPTq5NzOvLyunLSmlNTCrOTOrNzGrLyidMS+rLyynKyijLymjLyqjAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf/gAAAAQECAwQFBQYHBggJCgsLDAwADQ6CAQ8QD5ydEJ+gERKWE4ICDxSpqhWqqhYNFxMYphCtqaytGRoXGxgcggSoth25u70eH8APFR0VzMzNziAXIRjIvwAFwq3EqSLUGB/iI4LathS4JCXVJh8nKCmCKrXDFCss1eIfLS4v8ssdmgWsAGNDDBnt3s3wJ+jAtlUhaNSwccNEi4WCBBl4SAHHihw6ZOzg0QNjRgAG6KXK4CNEjBU/gDQI8kLISQAIADobAoMIzCINjLw4YvNkAno4kCRRUuNHESNLmDRxUjSjAlRPfECJImUKlSpMrFzBIqWqoKtJaWSJomULAy5XXrp4+QKGYcYFoCBEWRImi5gmY7CQyVLGriAGD2jEMHMmCxc0Xb6kUbOGTRs3N988gLM4jpw5Y+iwqcOGjZ07mE8yiGABz5c8c/Ts4cOnDJkybS7fdMO7t+/fvDMaCAQAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createEditcopy {} {
    image create photo editcopy -data {
        R0lGODlhFgAWAIUAAPwCBBQSFPz+/DQyNISChDw6PMzKzMTGxERGRIyKjFxaXMTCvKSmpHR2dPz6/Pz29PTq3MS2rPz69MTCxFxWVHx6dJyWjNzSzPz27Pzy7Pzu5PTm3NTKvIR+fJyGfHxuZHxqXNTCtPTq5PTi1PTezNS+rExOTFRORMyylPTaxOzWxOzSvNze3NTOxMy2nMyulMyqjAQCBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAbYQIBwSCwahYGkUnk0BgTQ6IAQaBKfUWhBYKhaAU+CgXAQIAyChLeJzSIQhcH6GFaM0QtGY5kstqEODw8QEQELAhJTc08KBBMEFBUWDRcBE1pca20SGBkaEBscAY5maFRIAgoLHRQRHh8gIQFlZnByqA8ZGSIQIyQjJQEmYgJ5p2ACrK4gJx4gKIZZAgdeAQ4ZI9kjKSor0AwEjeAs1S0cHAslLi4vMDDRWeRIfEsxMeET4ATyVoYLC5fizXEiAR84BeMG+pEm8EsAFhAjSlR4hR6fLxiF0AkCACH+aENyZWF0ZWQgYnkgQk1QVG9HSUYgUHJvIHZlcnNpb24gMi41DQqpIERldmVsQ29yIDE5OTcsMTk5OC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmh0dHA6Ly93d3cuZGV2ZWxjb3IuY29tADs=
    }
}
IDE::Toolbar proc createEditcut {} {
    image create photo editcut -data {
        R0lGODlhFgAWAIMAAPwCBAQCBAwCBPz+/OTi5JyanOzq7DQyNGxqbAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAARbEMhJq704gxBE0Bf3cZo4kRJqBQNRfBucyudgvJS6VaxLzyMa6/bLiWA9HOg4VIIkL5vzuRkcpkvRIIAorphJLzBW84WEuRZWp6uaT7J2Sh1Hit3OY/ZO7WvsEQAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createEditpaste {} {
    image create photo editpaste -data {
        R0lGODlhFgAWAIYAAPwCBBQWFDw6FHRuFGRaBFxSBAQCBAQKBCQiBIx6HPz6/NTOfKyiXDQuFOTm5Pz+/Ozu7PTq5Pz63PTyxNTOjKSeRExGLMTGxMzKzNTS1NTW1Dw2NKSmpKyqrKSipJyanNzWlLy6ZLSuVIx6FISChIyKhJSSlCQiJLS2tDw6NDQyNCQiFCQmHBQSDGRiZHRydGxubHx6dGxqbFxeXGRmZFxaXCwuLOzq7KyurHx+fDwmFEQuFCweFCQWDBQODBwaHBweHKSinJSWlOTi5JyepHR2dDw6PBQSFNze3ERGRIyKjIyOjISGhPz29Pzy7MS2rMzOzFRWVHx2dHxybDQiFPz27Pzu5PTq3PTm1NTCtJyGdHxuZHxqXPzq3PTaxNS6pFxWVFRKRNS2nPTi1PTStNSulNzOxNSynMymhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf/gACCgwABAgMEBYSLggaOjgcICQoLDA2Pj4MGDg8QEZ4FDxITFBUWFxcYGRobjQ8cHR4fCQ8gCyEiFSMWJCUkJieNEB4dKB4pKissK8wrLS4vMDHBAAYQHx8dFx0fJDIzNDU0M+IyHzaNNyg43Ng5Ojs7Ojw9Pj9AMkCNDiZB/h9CSOx4QLCgihItqBkYgqIDESElitAYWJCgkQcXjjRCgi1Ihw4BB5LAQOLCgyQYHihpUU3DBw5ElpAgAYNixSRJjKjQaECDCRPZPDB5IbIGSQwKLnh4wbInLA4kmJB4oaPiAwVNnER40hRK1BIAaVatUZJEFCkmpmjgCeWDCalFe4q4oFKwSRUrEa5gycLzwq8lUnPQ4PEgSpYcUZ5o2cIlS1O/JHLEDdfjQZMIVrpgweLFy5e+M6WSmBGlxYMYYBRzCaOFi5imHWBIfOEiShLTVjaP6eyFTBmN1TA5OvLDjJksWb58OVMGDRqWjAYdmU79SIvpjqJr104nEAAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createFilefind {} {
    image create photo filefind -data {
        R0lGODlhFgAWAIYAAPwCBBQSFJyanLS6vLzCxISChNTe3OTu9Oz6/Nzy9Nzy/NTy/OT2/Nzi5Mzu9Lzq9KTe7LTq9PT+/Pz+/Nz2/Mzu/Kzm9Jza5HzK1LTi9PTu9IzW5ITO3FxaXNT2/KTi7Iza7GzC1LzW3FRSVMzO1MTq7HTS3Fy6zFS2vKzm7Lze5MTGzHzS5FTG1Ey2xEyyvJze7JzW3ITa5FTK3EymrGS+zFxWXKymrMzi7ESirEyqvLSyrKze7MzOzMTCxKSepAz+/NzW3MzKzBwWHLzS3ERCRAzi3KyurNze3MzGzLy2vLSutCQiJAyytHRydOTe5MTGxLy6tLyqpKyelJSCdOze3NS+tLyupLSmnKSOhCwuLPzy9Pzu7Oze1OzazOTOvMyihOTi5PTm3Pzi1PTazPTWxOzOtNSunDQyNPzy7Pzu5OzKrNzSzNzGvNS6rMyynMymjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf/gACCgwGFhYOIiYQBAgMEAwKHiokBBQYHCAkKCwwFAZOEBQ0IDAsODxARCZ6gAAEGEhMSFBUWFxgZCJ+TjBoMEpkRERscGBGRih0BBAgeFBQOER8gISEfIruIIwEkCCUVwhcgJicoKSrZg9srCRkRGdMsLS4vMNiK2wIKMRsbMiwzXtCocSydIBs3AuCIwIFDiBMucugAoWvSiB2VNPDg0ELHwA0MkCXr4aNSggg8NoDIQOFHgBtAkgURMiDAEAFEVBCJFKCIkSMGOyDRkETJEkOFmABoUsRJQkQdnkzQACWKlBtTplBR6qopxkFRJ0ytYuWKFCxZtBBq+hRA2AlbRrh08fLlCxi1a51g+dQhDFwuYsaQKWPmDBpKXgNETaNGjJgyhNfcVdTTiWI2XpK0cePmzRk4YA5T5otGixY0qFOXbgXAQCAAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createFilenew {} {
    image create photo filenew -data {
        R0lGODlhFgAWAIUAAPwCBExOTERCRDw6PCwuLBwaHAwODAQCBOze1NTW1OTi5Nze3MTGxLS2tJyanPz+/Ozu7OTi3BQSFCwqLDw+PDQyNFRSVPTu7MzKxLyyrIR+fCQmJPz6/NTOxPz69Pzy7PTu5Pz29Pzu5PTq5PTm1My6pBQWFPTq3PTm3NS+rAwKDPTi1PTezOzWxMy2pPz27PTazOzSvMyynOzaxOzOtPTaxOzKrMyqjOzGpMymhPTizOTCpNzSzNTGvMymjMSihCH5BAEAAAAALAAAAAAWABYAAAboQIBwSCwaiYGAYEAgFAqGg/Q4DCASCsTiymgcHAcqQLB4mM+QiIQBppLPcMjkwQ4bB2X4maKgt4sVCHpnFhQTElNFE3mDDxcYGRp2RBuMgxwIHX9EBZZwHh8gCBmTQ52NISEiIyQlpUImng8hHyInKAgprwAqgnC0IKwrLLpGB4wctLYkwy0uuwd9Z8AnJywsLcVFx2YcL7UnJCwwLTEy0GXJoSgrCCwzNDTnxgjeH9UrKzXwNDY36LRGhEOwLx4NHDmgJbh3QoeOgv127EhojEeHDj16pEhRQoZHHzl+QJNCsqTJSXaCAAAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createFileopen {} {
    image create photo fileopen -data {
        R0lGODlhFgAWAIYAAPwCBAQCBCQWDCwaDDwmFPSubPzGhPzCfPy2dOSmZPzKlPzSnPzOlPzKjBQODPzChPzWnPy2bPSmXPyuZOyeXIRSLEQuFEwyHEQqFDQiFCweDKRuPFRSTPT29PTy9Ozq7OTi3Nze3NTW1MzOzMTGxMTCxLy6tLSytKyurDQyNMzKxOTm5OTi5Nza1NTS1MTCvLS2tLSyrKSmpJyenJSWlIyKjHx+fFxeXBwaHKxuPMzKzLy6vIyOjHx6fDw6NPy6dGxubLy+vISChCQmJNza3KyqrBQSFLR2RKSinJyanGxqZAwGBJSSlCwqLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf/gACCg4SFhoeDAYqKiIeLj4wBjQCMhY+NkoiLk5qbhQIDoJyGBAUGBwgEo4MECQoLDA2pDrS1tKQPEAwHERITE77AvxKqhAQNDA8UFRYXFs8YBAQZGqGPxw0RGxwdHR4eHyAhIiMkJSYnKCgpBAYPEhcqHyssLS4kLzAxMjM0NTY3cBA4UCAHBw8gVnhgEcKFjhc7UPDj0cMHAAI/KFgY4YLFio/jRpTYsW8GDyCSCEQw2DChOHIqgsCQSEPIEEEEJFhAoUNECCJEyOk4d6KIyRtGcB7hIJKjixEjHu4oimSGEIs4d8IIUoKECnNB0ElMwkNJJgBLlJBAcQKGiR07KGAURVGViY0mhIwwSTKjr99+THjUoIg0r48hTRIrRtxkiOMhDgrZCQQAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createFilesave {} {
    image create photo filesave -data {
        R0lGODlhFgAWAIUAAPwCBGxqbAQCBLy+vERCRExKTHRydIyKjMTCxFxaXGRiZFRSVFRWVPz6/Nze3Nzm5Pz+/JyanDw+PExOTHR2dMTGxBQWFLSytHx+fISChOzy9Ly6vAQGBJSWlMzKzAwODJSSlHx6fIyOjOTi5DQ2NISGhGxubCwuLOzq7ERGRFxeXNTW1CwqLPT29Dw6PGRmZKSmpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAb/QIBQGBAMj8ikUDAgFAzKKCBwQCQUCcICKh0SEAhGw5EIZAmBrgCxeDQgcDJWyz0GIggJfL+XGwQJRxNgC3yGDwwUFUZDFhdthnwMGAZNQwEZFwQakXANBBQbHIIdERIBnRAOiR4ERx8gsSEMBBmGCyEGG3YGBwcgIr8UCwQHECOgG4xCtRkEJAvBJRklJgkSFBQeJ68hJiEoESkFKiEZIbkGARsLlwEGExENGhorGSkpFAYm66NDLAECpGiBYsUIFA8wLHBBQMWLVkdUCFCwaYVFBOymkVCgYEMgOykEpICBccMBAhhELFigTEqAAgIIwCiQ4eRKDyS6EAlJIAI0EpaudF4iIKDAAn9CkRT5eMROEAAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createFilter {} {
    image create photo filter -data {
R0lGODlhFgAWAIQAAPwCBAQCBAwKDMzKzMTGxNTS1MzOzAQGBLS2tLy+vKyqrLSytLy6vMTCxBQWFKyurCQmJBweHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAV7ICCOZGmeaHoGbKuOAjsQhVG764EgyT7YhaCBVQogFMhFImEABoUBknFxRDAazac2Kg00djystkA0sQ4BgzgYK6+Ch/bBseOmAmMD4gF5ifBCDwoRfiOABgyEhYYFCA6LUo19kH+Nj5QAaQh2kHibmJkFBJydpKCnfnYhACH+aENyZWF0ZWQgYnkgQk1QVG9HSUYgUHJvIHZlcnNpb24gMi41DQqpIERldmVsQ29yIDE5OTcsMTk5OC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmh0dHA6Ly93d3cuZGV2ZWxjb3IuY29tADs=
    }
}
IDE::Toolbar proc createFinish {} {
    image create photo finish -data {
        R0lGODlhFAAUAPYAAAAAAAcICwkKDRASFxcYHBcZHRccJhkeJyInMC0zPiwzQDxFWEBIV0FIV0FJ
WEJJWUJKWUNLWkRMW0VNXUZOXkdPX0hQYEhRYUpSYkpTY0tTY0tUZEtUZk1WZ09YaVBZalFddFlq
i252iGd1kGR2mmd6oml9o2t+pGx+pW2Apm2Ap26Apm6Bp2+Cp26BqG6CqG+DqXWGp3CDqXSGqnaJ
r3mLrn6OrneKsHiLsXmMsnqNs36Psn+SuIGQroKRsIOSsIWVtICTuIGUuYKVuomZuIqauY6cuo6e
vo6ev4ibwImcwZOkxJSkxJmqzJ2v0qu51qusrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAFAALAAAAAAUABQAAAePgFCCg4SFhoeIiYqLjI2EAJCFAAQAiR1NG5JPIgWVhhlLF5JITEYa
AoYWRxSSLTM1OzEKnoITRBKSJSYoKyknIQaeEUAQkiouLzIwMCwkB4IOPw2SNDc4OTk6CwGeDD0M
kjxBQkMgA7RQDD4PkklKIwjoghFFFZI2CfKDGE0ekvqEPjjh4GgQJIAFEyo8FAgAOw==
    }
}
IDE::Toolbar proc createForward {} {
    image create photo forward -data {
        R0lGODlhFgAWAIUAAPwCBAw2VAQCBBxCXDR+nIS21Aw+XJTC1Nzu/KzO3Pz+/Nzq9Pz6/MTe7KTW5FzC1Nzu9CRKZMzi7IzK3Lzi7LTe7HzG3Gy+3AyuzAyexFzC3DRSbHy+1Dy61CSqzAySvAyStLze7IzO5AyGrETa5ByixBRmjCTC1ETS3BTC3Bx2nAyWvEze7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAaYQIBwSCwaj8hkMqBsBgTN5IAAjRoDBaq1aDggtMuAWDzoJhTgY+CwYLgZDccDwkgXI5IJZVGxXDAZGnR2QxsLHB0PHRgeHyAZDyFfVUQDCyIgIyCPIB+QJCUmlEMBEiInKCQnKSkeKSQeomoqJrUmKiArKSwZsmoCwMEBGCyxo1EGHr3HUQEEvltCBtDRAAbMW0zV29xDBkEAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createForward2 {} {
    image create photo forward -data {
        R0lGODlhFAAUAPYAAAAAAAcICwgJDAgKDBIVGRMVGhQWGxccJhgdJxseJRkeKBoeKBsgKR0hKx4j
LB8jLB8kLSAlLiEmLyMnMSUpMSgsMysuNS0wNy4xODtEV0BJXEJMXkhXdFBeelZieVplfF1pfmJv
iGF0l2J2nWR4nmZ6oGZ6oWd7omh8omp9o2t9pGt+pWt/pWx/pWx/pnSAl26Bpm6Bp26BqG+CqG+D
qW+DqnGDpXCCp3CDqHCDqXCEqXCEqnGEqnKEqXKFqXSGq3SIrnWIrnaJr3iJrHeKsHiLsXiMsXmM
snuMsHuOtHyOsXyPtHyPtX2QtX6Rtn6Rt3+St4ONo4qTqIKTtYGUuYKVuoOWu4SVuIWVuISWu4SX
vIibv42dvombwImcwYqdwY+hxY+ixpSkxJinx5yryqu51q+92ausrQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAGcALAAAAAAUABQAAAeggGeCg4SFhoeIiYqJAACLhxdSGI6PgxVlZlEWlI8QXGJjZC8UnIkL
MD9IU1hXIQ+lhggkJSkxOD0+Nx0IsIMKJygpKistLCkmIxwHvQwyMzQ5Ozs6PDUyLiIIhg1AQUJC
REVGR0c2GQG9DklLTE1OT1BDGgK9ghFUVVZZWkobA/WDJGzp4uWLBwIACU0AE+ZDgYSFEoAwANFQ
o0oYMz4KBAA7
    }
}
IDE::Toolbar proc createGramcheck {} {
    image create photo gramcheck -data {
        R0lGODlhFgAWAPIAAAAAAAQCBFhYWFxaXACAAADAAKusrQAAACH5BAEAAAYALAAAAAAWABYAAANe
aLrc/jCaQMMCGKzKwlCDZQCCIWieEW6dorkTq4jNO8aznLn7VNG0k+tUwhlpuBfmuPmoRDaUbMaB
wYCSbIPAXXC7iu+2QOaSz4TzuWggt9GK80JA19rv+Lx+z+9rEwA7
    }
}
IDE::Toolbar proc createHistory {} {
    image create photo history -data {
R0lGODlhFgAWAPcAAAAAAAoNDg0PECAgICcxNjAwMAAAcgQLewcRf0hpd1ZmbVZveXBwcAgUggkZ
hQsciBQcgxgdgw0ijBArkxMxlxMzmhU6nBY9oCArjCE1kyU9nDY9lRlCpRtGqBxLrB1SsCZKpiBU
syJYtiNduTBPqD5PoyVhvTZisjVmuSVrwi10xjd0wDF6xFF+xS+Q1zaM0miHk2GVq2+XqWWfuXWa
q02BxECY2kmZ102f21eV0lud2FSg3EKk4Uup4VGx5le06FO/8G6VzmGV1XqQyXyc02+j136m2WOy
5GW87HC/7Hq04l7D8WvD72PF8mvJ8nTF73vH63TG8HTN9XvO9HzQ9YaksI2wv5Cmr6+vr4yaypOi
0Jym0Zqu2Jaz25+94q++36G+5ILF4o3J5ITS9Y3W943X+ZjT7ZTZ+ZvT8pvc+63Fz7LS37vU36TY
9aDe+qvc9bXJ5rXf96Tg+6vj/LPm/Lji9Lvm+bvp/c3a7dPd78Pt/snu/83w/9Py/tv0/+L2/ub4
/+r4//L7//j9/8zMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAIQALAAAAAAWABYA
AAj+AAkJHDjwQ4gOHQgqXDhihAiDCDlcsLCQoAkTH1K4+DFljI8XHyxUmFDRRIoUPN4MGkSECyA/
c3BYmCBB4cUUUfwI2snly0s/faBwkPDAYgomgAAFWhroJ5s9ep5McDDwIo8+fpJq9eNHTQAFd+jc
QIBA4AgVZ7ByXdtVQIAqc+ZIsVCW0Acbevj0UQtUjdsqZsYsWcLiAKGGSPLyWdxHzRW3NKBIceJk
CQ8DBkSIkCLEiB49e9YMYAAgQYwZY6jsQNEEc4gPVGoEoXPnjpUCWADoBhBmTI4TTjB/8PDkjBs5
cecsIACDBg0ZYs6MmXIEM6EOOsoYj3tHTx07d+x+zHGThsyYGgYEdkBxps0c2qD3yNdzZ3z5DOkJ
XbigJC5orABCVZ8bRVgnkAUgtHHHHmolBRRUc5gRQX4HVkBCHAxmBQYcL/WhxxsYGDjQBBNoAEZW
ggyxxU9dTEghQUQ5UIIWeayERxYbYPbiQg40gMABOupY0ZAHALkjQQEBADs=
    }
}
IDE::Toolbar proc createImage name {
    if {[lsearch [image names] $name]<0} {
        my create[string toupper [string range $name 0 0]][string range $name 1 end]
    } else {
        return $name
    }
}
IDE::Toolbar proc createItrad {} {
    image create photo itrad -data {
R0lGODlhFgAWAPMHAAAAADAwMEBAAACAAADAAP8AAP//wP///8zMzAAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAAAWABYAAASLEMlJq0Uh6x0uDUcoip0ngVx2pOzogu6oztoaAuG8wrG9
4i8ULXcDAIciozKgVMqEhyaAKd1Zez7ncwfNArcuQdEYEohzKDNIoDQozeCDuT2oG9xksUokuBsG
SgN+AHAcZHcEgX4FRxNsBSEGiUaCdwWFjnAHiHZ+ZgIZFJ9nm56fJqOpoyYIqqcVEQA7
}
}
IDE::Toolbar proc createKeyboard {} {
    image create photo keyboard -data {
        R0lGODlhGAAYAPU6AAAAAAUICh0oNCs8Tiw9UABAQDFEWTxUbkJceHNzdnR0dnR0d1d5nl+FrWGH
sGaPumePu1io/22Yxm+bynGeznKfz4eHiI6PjpCRkZGSkaKjo6OkpLS3r7e3t7W4sbW6sbq+trq/
try+t7q6urzAub3Cub3Cur7Eub/Fub/Fuqjc/8bJwsbKwsrOx8rKysvOyM3NzNLW0NPX0djZ1dna
193g29/g3O7u7Pn5+fr6+v///6usrQAAAAAAAAAAAAAAACH5BAEAADsALAAAAAAYABgAAAaVwJ1w
SCwaj8ikcslsOp/Q6DBClQqr1it1yx2qvuCwMiIMm8+qHZe8Q7tVWGK4sPPY73j8rjAXck4hgIIk
goEhHEJ8KnQ2ICEoLCkyKTWUKTEpKykgNntfdDMiKSYpLymnqCktKSUiM56LOzR5tHk0sAUuN7u8
vb68MIoFODrFxsfIxjnCWYqLBdDR0tPSb9bX2NnaZkEAOw==
    }
}
IDE::Toolbar proc createMailget {} {
    image create photo mailget -data {
        R0lGODlhFgAWAIYAAPwCBBQ6bCQ+ZAwePKTC5Ozu/NTi9GSWvAwSJGSu3JS+5CR+rAQOHPTy/AyKzES23AwOHCw+bOTq/BR6xES+5AwmTBw6ZMTW9Ax6tByi1BRGdAw2XAQCBDQuNDRupKzS9FSm1BR2vBym3EzC7CSGxBROhNTW1Pz+/OTm5NTO1AQGFNzW3Ozq7Ozm7IyKjJyWnMzOzNzq9Nze3OTa5Ly6vCQiJGReZISChKyqrAwqVBRWlOTi5MS6xJSWlNza3OTe5Ly2vGxmbKymrIyGjMzGzISGhKSepCQmJDw6PHR2dJSOlPTy9MTGxLy+vLS2tMzKzLSutMTCxLSytKSipJyenKyurJyanCwqLCwmLCwuLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf/gACCg4IBhgIBA4SLjAABBAUGBwiNlY4FCQoLDJaNAQ0ODwsQnYwREhMUE5ylFYYRFhcYGRgaGxsDHJUdFR4SHyAhEyIjJCUcuo0cJr0nExihxgwoyYscKSnMHicOIw4lKissLdWDHC4vMCu9McYqMjMyNOUANTY3OPEoOTolDCszdrSgwaMcBxs9TMxYOCMHBx8zfPj48QNINQ5BbMBIIUShDIUoTAhR94PHPEEHbQwZckOGjBQviMxYUWQIDCMmdXE4gqRnkiFETAxR8iKFjJU2evZEdmLJkgJIbqS4wXJIUapImj5FtuSEVyRVV1IVi4RIChhEkLVAgcJHEqVwVJUmYdKkiRNkALMRecKECRG/ff8CEQJFCA5kMKJEoUHDCQ/HkB9LmWKECpUeyKoIMSLEyosen0OD7iH2xg1dV7BkqXGlBpbWNTq4Zn2khu0aAAwEAgAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createMatrix {} {
    image create photo matrix -data {
        R0lGODlhFgAWAIAAAPwCBIQChCH5BAEAAAAALAAAAAAWABYAAAJHhI+pyw0Bw4sTVmmw1C/3/20ex2VUtJ2Uwx7oBb9eR45ziNfgy6tW2+pZhJicjXbTiZA7X2q4AjqIsajSuDsuty5n9SddGAoAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createPencil {} {
    image create photo pencil -data {
        R0lGODlhFgAWAIMAAASC/IQCBPwCBPyChMQCBPzCxAQCBPz+/MzKzISChKyqrDQyNEQCBAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAARYEMhJ6wxiEMtpIAWxddwXiqRlikSQeiAbuC+wirNR322gv7zcLobzDU+9XypoBBKTR1lz+RTWDgip8nUwZK1XLyIx5XoVicX2RUAo1DVKi7GOBxjxfNwQAQAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createPlayer-fwd {} {
    image create photo player-fwd -data {
        R0lGODlhFAAUAPEAAAAAADMzM6usrQAAACH5BAEAAAIALAAAAAAUABQAAAIrlI+py+0PYwwq0Gbt
yXfx+2HclomlMXppWJ0Cm6SvHGtkx+CoxPf+D2wUAAA7
    }
}
IDE::Toolbar proc createPlayer_rew {} {
    image create photo player_rew -data {
        R0lGODlhFAAUAPEAAAAAADMzM6usrQAAACH5BAEAAAIALAAAAAAUABQAAAIolI+py+0Po5wspGAd
zmJz5Rnh4mUjuYlpU6rYM57V637kZVP6zvdNAQA7
    }
}
IDE::Toolbar proc createPolando {} {
    image create photo polando -data {
R0lGODlhFgAWAPMHAAAAAMAAAP8AAP//AMzMzNzc3MD//////8zMzAAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAAAWABYAAAReEMlJq7046837NEcojiJwgWQKAIWFpuXaVi+8ym4IqDeb
HytSz2f66IIhgXLZGjoBy6ig+exJmYiiJKC8XbEVrmA1KJvPM4oYcG6X0xOuew7fzumZgn7P33v+
gIEUEQA7
}
}
IDE::Toolbar proc createRedo {} {
    image create photo redo -data {
        R0lGODlhFgAWAIUAAPwCBCReDJzGjMzivOTu3Pz+/JTWbHy+VHTCTMTivPT69BxGDESuJDyiHESiHEymJIzKZAQCBFS2LFzKNGzWPDRqHCxqDFSqLHy2XESCHAwaBAQOBBQqBDyWJHyqZDyKFGSiVESeJBQ6BAwSBGTGPFyWPFSSLEyOLESGJBQiDAwiBBQmDCRGFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAaoQIBwSCwaj8hkMcBkKpcBwYAwEDif0YLhwEUkFItFMkAwMBoOR+PxgHwjRDggamhIJpQ8ZbKGKOQLcgEFdhUWEYgRF3sNfhELBHALAhgZFhobRBwREhQdEAIEHpIKHwsaSJwUDQgQIJINARxKESESDQ0dgCIjSpAkDAwPco+ZSJAlJicnKHIAIrNHidOIQxunT0kpCyrZSCss0d5Fj6jjRonn6uvs2QZBACH+aENyZWF0ZWQgYnkgQk1QVG9HSUYgUHJvIHZlcnNpb24gMi41DQqpIERldmVsQ29yIDE5OTcsMTk5OC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmh0dHA6Ly93d3cuZGV2ZWxjb3IuY29tADs=
    }
}
IDE::Toolbar proc createReload {} {
    image create photo reload -data {
        R0lGODlhFgAWAIYAAPwCBCRSFCRSHBw+DBxCFCQ6FBwyDBQWBBxGFCxyLGTChMzqzLzmvHzKjDyOTER+RERyNDSqXNzy3LzivFS+fCyCPBQmBCQiBBxKFBQqDOTy3LTitES2dDR+PCxuJOT25KTarCx+PESSTCxKHDSeVCyKRNT21ESWVDSGPBQyDAQCBBQSFDRuLDSyZDySTGzChCRiJKSmpExKTDS2ZGzGhLy+vGxqbISChDSKRMzKzGxubDQ2NIyOjCQiJCwqLBQWFCwuLKSipERCRERGRHR2dAwKDDw6PFRWVIyKjCQmJFRSVBwaHKyurAQGBExOTBweHFxeXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAf9gACCg4IBAgMEBQYHhI2ECAkKCwwNDg8QBAOOhAQREhMUFQgWBxcHGBmbggkaGxwPB4yDB6SbBJIKHQaqtY0eHyAhsqrDgx4aCiKpqoQHAyMjJBMKJaSxzAAHIRsmJgonKA0LHSmDKiuOBywRLSQuLyEwwyoxMuiN6iUzNBXy5jU2bsgoJugABBz95uXQsUMGD3vpPPgTpKIGwx4+HMr4kW4YkCA2hAzxAQSIECI+imBTwVIFESNHerRUgc0cEiFHkjiiyYzeDiVLdvLcySSkkKGEWiZVweSGkIHMmvQosoQlkaZOjvhosvKJjIAxoOAsgpRZkQNLnvSoqspAIAAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createReload2 {} {
    image create photo reload2 -data {
        R0lGODlhFAAUAPYAAAAAAAIJAgANAAAOAAIOAgQOBAYPBgcPBwEXAgMVAwQTBAAZAAEaAQcYCAkc
CQocCgAmAAUrBgomCgAzACU8JQBAAABMAAhCCQ5HDwZeBg1VDghbCRteHAJjAgBmAAppCgBzAAtx
DA50Dxx6HCdWJylhKihmKkZeRkFpQQCAAACMAACNAACZAAySDBmGGQKjAgCmAACyAAK0Agi1CBa9
FievKCuvLADAAAPBAwDMAADNAAHMAQHNAQLNAgPNAwfOBw/QDxHRERLQEhPSExjTGBvTGyvKKyHV
ISPWIyXWJS7YLi/YLzHZMTLZMjnTOTvXOz3cPUefSEfFR0HQQkTeREXeRUbeRkfeR07VTkvfS1/H
X1DhUFjjWFnjWV7kXm3WbnnbemPlY2bmZmniaWjnaGnnaW7obnrme3voe33sfX/sf4DpgIDtgIPt
g4fuh4zvjJDwkKPoo6P1o6X1pan3qausrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAHUALAAAAAAUABQAAAfVgHWCg4SFhocAChgaEQCHhgAmX2tjUyKOj4IAJXB0c25iTxkAAAuP
DVooJ3FvZVU0HTEWjw8GdQAUaV5QRTs6ppkAByRhWUpAOjCYjw5SW1RMRD06IMuaAZgABSNIQz46
OhWQNS4E2Qwr4DrWghJYVkYfA4MAEzAq7AAcamRXRzIWlpWCFEUOGy5KfuhIwa5QAjB02nRZMiNg
JkEXzqAxkyUJDgG3IDS8FcLGBidNgiSbAILFSAAISLUQwkOdjgkXBQl4kQPcDYs56wyw4MGCgJHB
cgYCADs=
    }
}
IDE::Toolbar proc createRevo {} {
    image create photo revo -data {
       R0lGODlhFgAWAPYAAAAAAAQCBAQGBAwCBBweHAQuLAQ2NAxqbBx2dGxiTHxuVHxuXHxyXHx6ZAyK
hCSGhDSChDSOjDyalESenFSinGSqpGyqpHSurIR2ZIx+ZIyCbJSGZJyKbJSGdJyOdJySdJySfKSS
dKSWfKyafLSifIS2tKSahKyehKyijLSmjLSmlLyylMS2nMy6lMS+rNzClNTCpNzKpNzOrOTOrOTW
tOzWtNzWxOTazOzaxOzexPTexOzizOzi1Ozm1PTq1PTq3PTu3Pzu3PTy5PTy7Pzy5Pzy7Pz27PTy
9PT29Pz29Pz69Pz6/Pz+/MzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAE0ALAAAAAAWABYAAAf+gAEGTYSFhoeHARcBiI2IASUIjI6EAQSJkUyTjwE9CYkWCExLm5Wd
TEqfhgGhTK6bp65MCQG1lRWirqRNAThEo0tLCio3RowBuLJMSAEvOgDQqAspxQe1FLmuRyfQ3QBJ
DCk2RtYB2MpHJtBFStBKGCk0R+UT2UxDItBE7QBIGig35gkIIEFUsCRAQniDNkRDPHK1IiAwQnFI
Dw/eiFD8F/DAwAcIiAgJEmQHRm9FhnSgBjEAAgQ0fPj4geMDw25EPogT2ESAgwM1eOSYwUEfEGgg
ULioNmnATxk1iELrsQMaCxg2gPCs9BNGjA3ORIxgkfWIkiMQV/1sAfYDCRgmLuLKXWEt0c8MGhpA
2Mu3bymuBw44CDBQQOHCfwkVMFCgACVCgQAAOw==
    }
}
IDE::Toolbar proc createSpellcheck {} {
    image create photo spellcheck -data {
        R0lGODlhFgAWAIQAAASC/AQCBFxaXBQWFAwKDPzCxPwaHPwiJNQGBOxKTPQ6PNQCBGwCBPQ+POwCBPwqLMwCBHwCBBwCBFQCBLQCBPwCBBQCBCQCBPQCBOQCBDQCBFwCBJQCBAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAWGICCOZGmeaAoErMi+4xuQgQAI8yoKw2rfOZ1LRIgJh0hhDncsyXKypNMIKAKbNGpwFjxukcza7jt8xmCAgkpVMKxRhQOCnTAVFAtGqtBwLEgFDxAREigBExQVFRAibYNdJhaIigmODBdvF4gYDwoZDBpvIhKIGYOFoi4bHBGQogESqKlvBiEAIf5oQ3JlYXRlZCBieSBCTVBUb0dJRiBQcm8gdmVyc2lvbiAyLjUNCqkgRGV2ZWxDb3IgMTk5NywxOTk4LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KaHR0cDovL3d3dy5kZXZlbGNvci5jb20AOw==
    }
}
IDE::Toolbar proc createSpellcheck2 {} {
    image create photo spellcheck -data {
        R0lGODlhFAAUAPYAAAAAAAEMAQMOAwUPBQkQCQ4SDhYfFhkfGQUsBAU4BRYsFhcsFx4tHiUvJSo9
KgRUBA1iCwF+AT5PPktfS1JuUmR/ZBSSFAu+Cg+5DRC4DhSzEiu7KTa0NgfEBgPIAwfOBwjCBxfS
Fy3YLTXZNXaddnqeem+1b3Kpcne6dk3gTVThVGPZY2vdanbQdnrren7sfpa/lpzNnIfih4vvi5Dw
kJXylZbylpvzm6/fr6H1oaT1pKz3rLD4sLH5sbf6t736vausrQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAEAALAAAAAAUABQAAAeIgECCg4SFhoeIiYqHAACCjY6PkYaNkpWTjJeagwUHhJCOl0CRABUo
AYOko5CrAAc/GxCYigAwLBkaCIuDEjwgFxgJiZVABTgjHh0Ps4QTFI0VNiEfEcypMTQKBjwpIhbW
gww6NS0mLyocAosEJzs3My4rA7ujJD05Mgv0jyU+DvupGoADSBBRIAA7
    }
}
IDE::Toolbar proc createStart {} {
    image create photo start -data {
        R0lGODlhFAAUAPYAAAAAAAcICwwNDxATFxETGBMVGRYYHC0wN0BFUENLXUpUaUhWdEtad1FXY1Ri
flticFdlgFtphmNyjWVyimt0hmt5lHN7jGd7oXOBnHaCmXaEnm2Ap26CqG+CqHGEqXaJr3iKrXiL
r3uMr3iLsHmMsoGQroKRr4OSsIGTtoKTtoSUsoWUs4eUsIWVtICSuIGUuYKVuoSWu4aXu4eZvIiY
t4mZuIycvI6evomcwI2fxI6hxZGhwZKiw5SkxZOmypipypuqypmrz5qrzZytz5+w0p+x1KKxz6Kx
0KGz1aW00qq30LTB3ausrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAEwALAAAAAAUABQAAAeOgEyCg4SFhoeIiYqLjIQAjwCNgwBIRJGIAAWXggBCP5uOBxkQoAA9
PKBMAAYUQCALpTc2mwACD0YoHhcMpTU0lwANSkcpHRscDqUtKpEAFktJMyEfIyQRpScmwAgsMi4v
MDESpSUlpQkiODk6FdgrqQABCj5BGKU2O6mcAxMapUNF9E0iUAqSpIMIEzIKBAA7
    }
}
IDE::Toolbar proc createStree {} {
    image create photo stree -data {
        R0lGODlhFgAWAPAAAAAAAMzMzCH5BAEAAAEALAAAAAAWABYAAAI5jI+py+0H4mNgNmkNrllznklg
B44TFqBnol5Lq8DaYyLyTEU1Hn/1nhqpZDBgx9ML2ko7HWtJSRYAADs=
    }
}
IDE::Toolbar proc createTrad {} {
    image create photo trad -data {
R0lGODlhFgAWAPIDAAAAADAwMMzMzP///8zMzAAAAAAAAAAAACH5BAEAAAQALAAAAAAWABYAAANX
SLrc/jDKGaq9gY7NeZbBgFXiOHZoiHZka4kbsLXl6s1yGr4kPADA2U4VAwIDRiNr+EsikzKXbVbM
eYZMX1A31dqkO2q39+3WpsSv6WL+QNIr92N9mUwSADs=
}
}
IDE::Toolbar proc createTraduku {} {
    image create photo traduku -data {
        R0lGODlhEAAQAIIAAAQCBPwCBDQyNPz+/PzerAAAAAAAAAAAACH5BAEAAAEALAAAAAAQABAAAAMuCLHcri4yGISlj4kxcANgNRBQCIbL6U1Su7bB62rXvGydG25kqpwfIGxILBr9CQAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc createUndo {} {
    image create photo undo -data {
        R0lGODlhFgAWAIUAAPwCBCReDJzGjMzivOTu3PT69MTivHy+VJTWbIzKZEymJESmFESiHDyiHESqLAQCBFzKNGzWPFS2LNTmzCxqDDRqHPz+/KTGnBQqBAQOBAwaBESCHHy2XBxGDOzy7HTCTEyyJDSqFHzWTAwSBBQ6BIy+dESKJFySPFSSNAwiBCRGFBQmDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAAALAAAAAAWABYAAAalQIBwSCwaj8ikMsBkKotMwYAwEDiXgYLhwD0gCFZiQKxNKBYMRqPh+D6G16y5AYnYIxBJAyF4AwITTAUJdBESD4gPFBV6Fn6ABBcJDIYPGEQZGhQbHAIdfx4JHw2VSBodGwWfAR4LDSALfkgYAQurBiAhICKfSSMkvQElGyYnGyi9Rxkdj4nOskUYyU9FpxnURikdGtjRKivdRKfQ2Inh5+jpRwZBACH+aENyZWF0ZWQgYnkgQk1QVG9HSUYgUHJvIHZlcnNpb24gMi41DQqpIERldmVsQ29yIDE5OTcsMTk5OC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmh0dHA6Ly93d3cuZGV2ZWxjb3IuY29tADs=
    }
}
IDE::Toolbar proc createViewtree {} {
    image create photo viewtree -data {
        R0lGODlhEAAQAIIAAAQCBPwCBDQyNPz+/PzerAAAAAAAAAAAACH5BAEAAAEALAAAAAAQABAAAAMuCLHcri4yGISlj4kxcANgNRBQCIbL6U1Su7bB62rXvGydG25kqpwfIGxILBr9CQAh/mhDcmVhdGVkIGJ5IEJNUFRvR0lGIFBybyB2ZXJzaW9uIDIuNQ0KqSBEZXZlbENvciAxOTk3LDE5OTguIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpodHRwOi8vd3d3LmRldmVsY29yLmNvbQA7
    }
}
IDE::Toolbar proc showTooltip {obj win} {
    if {[Object isobject $obj]} {
        $obj showTooltip $win
    }
}
IDE::Toolbar proc unknown args {
    error "unknown method $args"
}
@ Class NavigadaKronikoMix {
description {MIX-Klasso uzata por aldoni kronikon al dialogon (ekzemple montriloj de vortaroj)}
}
Class NavigadaKronikoMix
@ ::NavigadaKronikoMix idemeta component EspTeknikajIloj
NavigadaKronikoMix instproc aliguElemento elemento {
    [my info class] instvar history historyIndex
    if {$historyIndex==0 || ([lindex $history $historyIndex] ne $elemento)} {
        incr historyIndex
        set history [linsert $history $historyIndex $elemento]
    }
}
NavigadaKronikoMix instproc navigadoKroniko {} {
    [my info class] instvar history historyIndex
    if {[llength $history]==0} {
        EsperantoBrowser message [mc "Neniu serĉado en memoro"]
        return
    }
    set dlg [IDE::IDialogList new -volatile -message {Elektu elementon} [list -list $history]]
    if {[$dlg prompt] eq "ok"} {
        set selektita [$dlg selectedItem]
        if {$selektita ne ""} {
            my montruElemento $selektita
        }
    }
}
NavigadaKronikoMix instproc naviguLastan {} {
    [my info class] instvar history historyIndex
    if {$historyIndex>=1} {
        incr historyIndex -1
        set hitem [lindex $history $historyIndex]
        my montruElemento $hitem
    }
}
NavigadaKronikoMix instproc naviguMallastan args {
    [my info class] instvar history historyIndex
    if {$historyIndex<[expr {[llength $history]-1}]} {
        incr historyIndex 1
        set hitem [lindex $history $historyIndex]
        my montruElemento $hitem
    }
}
NavigadaKronikoMix instproc puriguKronikon {} {
    [my info class] instvar history historyIndex
    set history [list]
    set historyIndex -1
}
NavigadaKronikoMix proc initHistory klaso {
    $klaso set history [list]
    $klaso set historyIndex -1
}
@ Class ProgresoMontrilo {
description {Dialogo por montro de progreso cxe longdauxrajn taskoj.
Uzado per klasa metodo '''ProgresoMontrilo startProgress'''}
}
Class ProgresoMontrilo -superclass ::IDE::Dialog -parameter {{type okcancel}}
@ ::ProgresoMontrilo idemeta component EspTeknikajIloj
ProgresoMontrilo instproc checkStop {} {
    my instvar userAction win dialogSemaphore
    if {[info exists userAction] && $userAction eq "cancel"} {
        if {[winfo exists $win.buttons.cancel]} {
            $win.buttons.cancel configure -text [mc "daŭrigu"]
            my vwait dialogSemaphore
            $win.buttons.cancel configure -text [mc "haltigu"]
            if {$userAction eq "cancel"} {
                set userAction ""
            }
        }
        set dialogSemaphore 0
    }
}
ProgresoMontrilo instproc init {} {
    my instvar type win title
    set tile [mc "longdaŭra procezo"]
    next
    scale $win.sc -orient horizontal -sliderrelief flat -sliderlength 0 -troughcolor #AAAAAA -showvalue 0 -label 0
    pack $win.sc
    if {$type eq "okcancel"} {
        $win.buttons.ok configure -text [mc "ĉesu agadon"]
        $win.buttons.cancel configure -text [mc "haltigu"]
    }
    if {$::tcl_platform(platform) eq "windows"} {
        wm attributes $win -toolwindow 1 -topmost 1
    }
    wm deiconify $win
}
ProgresoMontrilo instproc isStopped {} {
    my instvar userAction
    update
    my checkStop
    expr {[info exists userAction] && $userAction eq "ok"}
}
ProgresoMontrilo instproc metuMesagxon mes {
    my instvar win
    $win.msg configure -text $mes
    update

}
ProgresoMontrilo instproc setProgress procent {
    my instvar win
    if {[winfo exists $win.sc]} {
        my checkStop
        if {[winfo exists $win.sc]} {
            set pl [$win.sc cget -length]
            $win.sc configure -sliderlength [expr {$pl*$procent/100}] -label $procent
        }
    }
    update
}
ProgresoMontrilo proc startNurProgress message {
    set obj [my new [list -message $message] [list -type none]]
    $obj makeModelessDialog
    return $obj
}
ProgresoMontrilo proc startProgress message {
    set obj [my new [list -message $message]]
    $obj makeModelessDialog
    return $obj
}
Class ZipArchive
@ ::ZipArchive idemeta component EspTeknikajIloj
ZipArchive instproc addFile {inputFile fileName} {
    # inputFile - source file to archive
    # fileName - name of file in the archive
    my lappend files $inputFile $fileName
}
ZipArchive instproc addToStream {stream fin fout} {
    my instvar written

    set offset $written

    set fdata [open $fin r]
    fconfigure $fdata -encoding binary -translation binary
    set data [read $fdata]
    set datacompresed [string range [::vfs::zip -mode compress $data] 2 end-4]
    close $fdata

    binary scan \x04\x03\x4B\x50 I LFH_SIG
    my writeLong $stream $LFH_SIG

    incr written 4

    my writeShort $stream 20
    # java implementation make 8
    # but tools (WinZip) leave it 0
    my writeShort $stream 0
    incr written 4

    my writeShort $stream 8
    incr written 2

    # last mod. time and date
    set dosTime [my toDosTime $fin]

    my writeLong $stream $dosTime
    incr written 4

    set crc [::vfs::crc $data]
    set csize [string length $datacompresed]
    set size [string length $data]

    my writeLong $stream $crc
    my writeLong $stream $csize
    my writeLong $stream $size
    incr written 12

    # file name length
    my writeShort $stream [string length $fout]
    incr written 2

    # extra field length
    set extra ""
    my writeShort $stream [string length $extra]
    incr written 2

    # file name
    puts -nonewline $stream $fout
    incr written [string length $fout]

    puts -nonewline $stream $extra
    incr written [string length $extra]

    set dataStart written;
    puts -nonewline $stream $datacompresed
    incr written $csize

    list $offset $dosTime $crc $csize $size
}
ZipArchive instproc createFile file {
    set fout [open $file w]
    fconfigure $fout -encoding binary -translation binary
    my createToStream $fout
    close $fout
}
ZipArchive instproc createToStream ostream {
    my instvar files cdOffset cdLength written
    set descriptionList [list]
    foreach {fin fout} $files {
        lappend descriptionList [my addToStream $ostream $fin $fout]
    }
    set cdOffset $written

    foreach {fin fout} $files desc $descriptionList {
        foreach {offset dosTime crc csize size} $desc {}
        my writeCentralFileHeader $ostream $fin $fout $offset $dosTime $size $csize $crc
    }

    set cdLength [expr {$written - $cdOffset}]
    # wirte header

    # EOCD 0X06054B50L scan 0X06054B50L %x s set s
    binary scan \x06\x05\x4B\x50 I EOCD
    my writeLong $ostream $EOCD

    # disk numbers
    my writeShort $ostream 0
    my writeShort $ostream 0

    # number of entries
    set filenum [expr {[llength $files]>>1}]
    my writeShort $ostream $filenum
    my writeShort $ostream $filenum

    # length and location of CD
    my writeLong $ostream $cdLength
    my writeLong $ostream $cdOffset

    # zip file comment
    set comment ""
    # comment lenght
    my writeShort $ostream [string bytelength $comment]

    puts -nonewline $ostream $comment
}
ZipArchive instproc init {} {
    my set files [list]
    package require vfslib
    my instvar cdLength cdOffset written
    set cdLength 0
    set cdOffset 0
    set written 0
}
ZipArchive instproc toDosTime file {
    set sec [file mtime $file]

    foreach {year month day hour minute secound} [clock format $sec -format "%Y %m %e %k %M %S"] {}

    set month [string trimleft $month 0]
    set year [string trimleft $year 0]
    set minute [string trimleft $minute 0]
    if {$minute eq ""} {
        set minute 0
    }
    set secound [string trimleft $secound 0]
    if {$secound eq ""} {
        set secound 0
    }

    set value [expr (($year - 1980) << 25) | ($month << 21) | ($day << 16) | ($hour << 11) | ($minute << 5) | ($secound >> 1)]
    return $value
}
ZipArchive instproc writeCentralFileHeader {ostream fin fout offset dosTime size csize crc} {
    my instvar written

    # CFH 0X02014B50L
    binary scan \x02\x01\x4B\x50 I CFH_SIG
    my writeLong $ostream $CFH_SIG
    incr written 4

    if {$::tcl_platform(platform) eq "windows"} {
        # unix
        set pid 5
    } else {
        # windows
        set pid 11
    }
    my writeShort $ostream [expr { (($pid << 8) | 20)}]
    incr written 2

    # version needed to extract
    # general purpose bit flag

    my writeShort $ostream 20
    my writeShort $ostream 0
    incr written 4

    # compression method
    my writeShort $ostream 8
    incr written 2

    # last mod. time and date
    my writeLong $ostream $dosTime
    incr written 4

    # CRC
    # compressed length
    # uncompressed length
    my writeLong $ostream $crc
    my writeLong $ostream $csize
    my writeLong $ostream $size
    incr written 12;

    set comment ""
    set extra ""

    # file name length

    my writeShort $ostream [string bytelength $fout]
    incr written 2;

    # extra field length
    my writeShort $ostream [string bytelength $extra]
    incr written 2;

    # file comment length
    my writeShort $ostream [string bytelength $comment]
    incr written 2;

    # disk number start
    my writeShort $ostream 0
    incr written 2

    # internal file attributes
    my writeShort $ostream 0
    incr written 2

    # external file attributes
    binary scan \xED\x81\x00\x00 I ATTR
    my writeLong $ostream $ATTR
    incr written 4

    # relative offset of LFH
    my writeLong $ostream $offset
    incr written 4

    # file name
    puts -nonewline $ostream $fout
    incr written [string bytelength $fout]

    # extra field
    puts -nonewline $ostream $extra
    incr written [string bytelength $extra]

    # file comment
    puts -nonewline $ostream $comment
    incr written [string bytelength $comment]
}
ZipArchive instproc writeLong {stream short} {
    puts -nonewline $stream [binary format i $short]
}
ZipArchive instproc writeShort {stream short} {
    puts -nonewline $stream [binary format s $short]
}
ZipArchive proc createZip {zipFile files} {
    set zipArch [my new]
    foreach f $files {
        $zipArch addFile $f [file tail $f]
    }
    $zipArch createFile $zipFile
    $zipArch destroy
}
ZipArchive proc dumpFile fileName {
     # Open the file, and set up to process it in binary mode.

     set f [open $fileName r]
     fconfigure $f  -translation binary  -encoding binary  -buffering full -buffersize 16384

     while { 1 } {

         # Record the seek address.  Read 16 bytes from the file.

         set addr [tell $f]
         set s [read $f 16]

         # Convert the data to hex and to characters.

         binary scan $s H*@0a* hex ascii

         # Replace non-printing characters in the data.

         regsub -all -- {[^[:graph:] ]} $ascii {.} ascii

         # Split the 16 bytes into two 8-byte chunks

         set hex1 [string range $hex 0 15]
         set hex2 [string range $hex 16 31]
         set ascii1 [string range $ascii 0 7]
         set ascii2 [string range $ascii 8 16]

         # Convert the hex to pairs of hex digits

         regsub -all -- {..} $hex1 {& } hex1
         regsub -all -- {..} $hex2 {& } hex2

         # Put the hex and Latin-1 data to the channel

         append ret [format {%08x  %-24s %-24s %-8s %-8s} $addr $hex1 $hex2 $ascii1 $ascii2] \n

         # Stop if we've reached end of file

         if { [string length $s] == 0 } {
             break
         }
     }

     # When we're done, close the file.

     close $f
     return $ret
}
ZipArchive proc testZip {} {
    my createZip {C:/tmp/my2.zip} {C:/tmp/test.txt C:/tmp/test2.txt C:/tmp/tmp.zip}
    # ZipArchive dumpFile {C:/tmp/my2.zip}
    # ZipArchive dumpFile {C:/tmp/tmp.zip}
}

