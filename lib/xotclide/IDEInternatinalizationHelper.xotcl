# automatically generated from XOTclIDE
package provide IDEInternatinalizationHelper 0.1
Class POTHelper
@ ::POTHelper idemeta component IDEInternatinalizationHelper
POTHelper instproc convertPoToMsg {{fileName {}}} {
    if {$fileName eq ""} {
         set types {{"POT catalog" .po}}
         set fileName [IDE::Dialog getOpenFile $types]
    }
    if {$fileName eq ""} return
    set types {{"MSG Tk catalog" .msg}}
    set outFileName [IDE::Dialog getSaveFile {} $types .msg]
    if {$fileName eq ""} return

    set if [open $fileName w]
    set of [open $outFileName w]
    set waitmode msgid
    set oldmode msgstr
    set msgidList [list]
    set msgstrList [list]
    while {[gets $if line]>= 0} {
        if {[regexp {^\s*#} $line] || [string trim $line] eq ""} {
            puts $of $line
        } else {
            if {[regexp "^\s+(".*")" $line _ rest]} {
                lappend ${oldmode}List $rest
            } else if {[regexp "^$waitmode .*" $line _ rest]} {
                set oldmode $waitmode
                lappend ${oldmode}List $rest
                if {$waitmode eq msgid && [llength $msgidList]>0} {
                    puts $of "::msgcat::mcset de $msgidList $msgstrList"
                }
                if {$waitmode eq "" msgid} {
                    set waitmode msgstr
                } else {
                    set waitmode msgid
                }
            } else {
                error "await $waitmode key word"
            }
        }
    }
    close $if
    close $of
}
POTHelper instproc readTranslation {if line o_ref t_ref} {
    upvar o_ref original
    upvar t_re translation
    
}
POTHelper instproc resetCatalog {} {
    my set catalog [list]
}
POTHelper instproc saveCatalogAsPot {{fileName {}}} {
    if {$fileName eq ""} {
         set types {{"POT catalog" .pot}}
         set fileName [IDE::Dialog getSaveFile {} $types .pot]
    }
    if {$fileName eq ""} return
    my instvar catalog
    set f [open $fileName w]
    puts $f "# POT File generated by XOTclIDE Internationalization Helper PlugIn"
    foreach str $catalog {
        puts $f "msgid \"$str\""
        puts $f {msgstr ""}
    }
    close $f
}
POTHelper instproc saveMsg {{fileName {}}} {
    if {$fileName eq ""} {
         set types {{"POT catalog" .msg}}
         set fileName [IDE::Dialog getSaveFile {} $types .msg]
    }
    if {$fileName eq ""} return
    my instvar catalog
    set f [open $fileName w]
    puts $f "# POT File generated by XOTclIDE Internationalization Helper PlugIn"
    foreach str $catalog {
        if {$str ne [mc $str]} {
            puts $f "::msgcat::mcset de \"$str\" \"[mc $str]\""
        } else {
            puts $f "#::msgcat::mcset de \"$str\" \"###\""
        }
    }
    close $f
}
POTHelper instproc scanAllXdobry {} {
    foreach com [IDE::Component getComponentNames] {
        if {![string match xdobry::* $com]} continue
        my scanComponent $com
    }
}
POTHelper instproc scanBody body {
    set pattern {\[mc "(.+?)"\](.*$)}
    my instvar catalog
    while {[regexp $pattern $body _ str body]} {
        if {[lsearch -exact $catalog $str]<0} {
            lappend catalog $str
        }
    }
}
POTHelper instproc scanComponent component {
     set cobj [IDE::Component getCompObjectForNameIfExist $component]
     if {$cobj==""} {
         error "$component not found"
     }
     foreach pobj [$cobj getProcsGroupsObjects] {
         foreach proc [$pobj getProcsNames] {
             my scanBody [info body $proc]
         }
     }
     foreach obj [$cobj getObjects] {
         foreach proc [$obj info procs] {
              my scanBody [$obj info body $proc]
         }
     }
     foreach obj [$cobj getClasses] {
         foreach proc [$obj info procs] {
              my scanBody [$obj info body $proc]
         }
         foreach iproc [$obj info instprocs] {
              my scanBody [$obj info instbody $iproc]]
         }
     }
}

